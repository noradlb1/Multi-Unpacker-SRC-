<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="OpenFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAIABoBAAAJgAAACAgAAAAACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAEAE
        AAAAAAAAAAAAAAAAAAAAAAAA////Af///wH///8B////ASUlJQMoKCgLLCwsFysrKiErKykhKSkpFycn
        JwshISEHJCQkBSQkJAP///8B////Af///wH///8BJSUlBSgoKA8rKyshKysqOz87M3dlYFa1WVJEvTgy
        JYcsKyhLLCsqOSwsLC8rKyshJSUlC////wH///8BJCQkBSgoKBsrKys3KysqTSwrKlN3cmnPubez/46J
        fP9cUkD5ZmJYx4J+dcc6Ni+RLCsrXyoqKiEaGhoD////ASkpKQUpKCcbR0E1bVFKO69nYlehpaKb9cLB
        vf/FxL//u7iy/8nHw/3Jx8H/W1NC6zIwLYUqKiozIiIiB////wH///8BRDwrK4aDeeGioJj/sK6o/7+9
        uv/Ix8P/0dDN/9rZ1//h4N7/hH1u/1lQP+k4NS93KioqLyMjIwf///8B////ATsxHRmCfnPNs7Gs/7a0
        r/+dmY//hn9y/6ynn/ve3dv/5+bk/5KMf/9gWEmhLy4tIykpKQ3///8B////Af///wFdVUYrm5iR47Ox
        rf+LhHn/XlRA/1hOOsFxaFld1tTQ7ezr6v/T0cz/r6ui7Xt0ZJt4cGAl////AUI1IgNZTz8pe3VqkbCu
        qf+npJ3/YllG/1pQPNlUSjYlmJOIH9fV0ufw8O//7Ovp/766sv+QiXv9hX9vWf///wFQRzYRhYB106qo
        ofu6uLT/nJeO/2FYRf9fVkOLVks7A7WyqVfn5+X57Ovp/6Odkv+XkITtkIp8pYaAcSP///8BV008HYJ8
        cOulopv/wL+7/66qo/9yaVj9bGRSc62poDfa2NTV8vHw/8zJwv+dl4v/lI6Ai3x0YwX///8B////AU5E
        MQNVTDlLjYh91cbFwf/Lysb/vbq0/726tOvf3tvv7+/u//X19P/Cvrf/pJ6T75GLfS3///8B////Af//
        /wH///8BZV9MBZWQhYvIxsP/1tXS/9/e3P/m5uT/7ezr/+jn5f/z8/L/29nV/7axqP2loJRp////Af//
        /wH///8B////AYF8bjW4tK7pwr+5/8jFwP/e3dr/6Ofl/87Lxf+1sKf9wLy04by4sO+7t6/fqaOXNf//
        /wH///8B////Af///wGFf3AbpKCWuZqUiPuYkobzyMW/7efm5P+6ta3/raieyZuWiCeqppo5rameM5+b
        jQP///8B////Af///wH///8B////AXx1ZRWMhXdXj4l7Ub25safFwrv5v7uz/bGto6ucmYsF////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wGblIcLpqGVPa2onVGno5Yf////Af//
        /wH///8B////Af///wH///8B////AQAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//wAA//8AAP//AAD//wAA//8oAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAA////Af///wH///8B////Af///wH///8B////Af///wH///8B////ASUlJQMgICAFLS0tCSkp
        KQ0oKCgPLS0tEy0tLRMoKCgPJiYmDSsrKwkgICAFIyMjAwoKCgP///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////ASUlJQMmJiYHKioqCygo
        KBUsLCwdLSwsJysrKi8rKykzLCspNSsqKTEpKSgnKioqHSgoKBUoKCgPJycnCyAgIAkkJCQHJSUlByoq
        KgUcHBwFERERA////wH///8B////Af///wH///8B////Af///wH///8BJycnAyYmJgUnJycJKioqDysr
        KxcpKSkjKioqMSwrKEUxLSddPDgwdUVBOIVGQDaLOjQpfzAsI2ctKyZJKysqNSoqKisrKyslKioqISws
        LB0qKiobKysrFygoKA8hISEJGxsbA////wH///8B////Af///wH///8BISEhAyMjIwUnJycLJycnEygo
        KB0rKyspLCwsNSsrK0UsLCtTNzQse1JMQL9uaV3jgXtx93dwY/1VTDrvQDgnzzcwI58uLCdrLCsoXSwr
        KFUsLCtJLCwsRSwsLD8sLCw3KysrKSgoKBchISEJERERA////wH///8B////Af///wEgICAHJSUlDygo
        KBkqKionKioqNysrK0MrKytPKioqVy0tK11MRz2dg350+6yppP+8urb/oJyT/2tiUP9VSzf/SD8s6zUv
        JalbV0+tbGhgrUM+NZMxLyt5LCwraSsrK1srKytFKysrKScnJw8TExMF////Af///wH///8BJiYmAycn
        JwkpKSkXKioqKSsrKzcsKytFLCsqUSsrKk8qKipJLywoUVdRRaebl5D/vLq2/8C/u/+qp5//hX5w/3Rs
        W/9cUkD7UUo916Wim/G5t7D3f3lt6UpDNsc2MiybLSwseysrK10rKys3KCgoFyAgIAX///8B////Af//
        /wEtLS0DKysrCykpKRkpKSknKyoqMy4oHWUwJxmPLSYZbywnHk1JQzWHe3Vr16yppP++vbn/w8K+/8G/
        u/+6t7L/s6+n/5iTiP2alYz11NPQ/+De3P+8uLH/aWBQ90Y/Mc8yMCyTKysraSsrK0MoKCgdHh4eCf//
        /wH///8B////Af///wElJSUHJiYmDSomIR86MiNdYVtNwXJtX+lWTTzZYFlMyZOPh+esqaP7vLm1/8LA
        vP/GxcH/y8rG/8/Oy//T0c7/0M7K/9PRzv/h4N7/3dzZ/66pn/9oX03/UUg36Ts3L6csLCxxKioqSykp
        KSUlJSUNISEhA////wH///8B////ASEhIQMlIx0HNS0bN19ZSq+OjIL3oaCY/42Jfv+dmpL/tLKu/7y6
        tv/Avrr/xcPA/8rIxf/Ozcn/0tHO/9fW0//b2tj/4N/d/+Hg3v+xrqX/dGxb/15VQf9XTjztQjwyqS4t
        LGsrKytJKSkpJSgoKA8jIyMD////Af///wH///8B////ASwjDglQSDdjfnpv3aKgmf+sq6X/rqym/7Wz
        rv+6uLT/v725/8LAvf/HxcL/zMvH/9DPzP/V1NH/2djW/97d2//j4uD/4ODd/4uEdf9hV0T/XlRC9VBJ
        OsE5NjB3LS0sTysrKzUoKCgbIiIiCRAQEAP///8B////Af///wH///8BLiMNBz0zIEtqY1bFnJqS+6+u
        qP+0sq3/uLay/7y6tf+6uLL/sa6o/6ajmv+ppZ3/vLmz/9PSzv/c29n/4eDe/+Xk4v/m5OL/raie/2Vb
        Sf9gV0bTQj40YSwsLDcqKiopKSkpGSwsLA0oKCgF////Af///wH///8B////Af///wH///8BNSgVEVJJ
        OYWWk4rtsbCr/7a0sP+4trH/rqqj/5aRhv91bVz/Zl1K/2JYRf1yaln3q6ee9dnX1P3j4uH/5+bk/+no
        5v/Gw7v/cmlY/21mVOFeV0htOjgzHTIxLhEoJyYJIiIhA////wH///8B////Af///wH///8B////ATkt
        GQNMQzIxe3VqsaWjnPe1s6//trOv/6mln/+MhXr/ZVxJ/1xSPv9bUT35V04621RKN5eHgHSRzcrG5ePj
        4f/p6ef/6+vq/9XTzv+clor/mZOH9YaAcr1vaFhrcGlZO21mVhdqZFID////Af///wH///8B////Af//
        /wH///8BQTglC2dhU2+Sj4blsK6p/7e1sf+sqaP/kIqA/2ZdSv9bUT3/W1E9+1dOOs1RSTVjTUMwF5GK
        gDnAvbfP4eHe/+zr6v/v7+3/7+7t/+3s6v/m5uP/rKee/4B5afd/d2jPe3NjZ3ZuXRH///8B////Af//
        /wH///8BPS0bAzwvGwtNQzIteXRop6GfmPu2tLD/tbKu/6OgmP9yalv/XFI+/1tRPf1ZTzvbVEs3aU1G
        Mg3///8BkoyBM8C9ts3j4uD/7u3s//Hx8P/19fT/9vb1/+bl4v+tqJ7/jYZ4/4yFd/+EfW6bfXZlHf//
        /wH///8B////AUI1IgdPRDMvYVlJY21mWJOPi4Hfr62o/7m3s/+uq6X/mJKJ/19WQ/9cUj7/XFI+81hO
        OpdTSjYb////Af///wGdmY5DzMnE0+fn5f/w7+7/8/Px/+bm4//d3Nj/x8S+/52Xi/+UjYD/kox/+4mD
        dJF/emoZ////Af///wH///8BRzwqF15VRpWJhXrfl5SL76mmoP23tbH/uri0/66rpf+Jgnb/X1VB/19V
        Qf9fVULdWE88WVJHNQX///8BeXRlBammnHHZ2NTp7e3r//Ly8P/w7+3/trKp/6eil/+gmo7/lY6C/ZON
        gPmQinzZiIFzY313Zw3///8B////AUE1IgNVTDwtcmxf16inoP+wr6n/trSv/7u5tP+8urb/sK2n/4eB
        df9jWkf/ZFtJ/WNaSMVYUD0r////AWJaSwORjH8vx8S+tebl4/vx8e//9PTz/9vZ1P+Zk4b/lY+C/5aP
        gvePiHrBjIV3c4uFdkuFf28benRlA////wH///8BQjkkA1pRQT19d2vjraym/66tpv+2tbD/vbu3/8C+
        uv+zr6r/mJOI/2piT/9rYlD7aWBPu1tTQRdjW00Di4R5H7ayq4vd3Njr7u7t//Pz8f/x8e//vbmx/5mT
        h/+blYn/mZKG44iAcWt8dGMN////Af///wH///8B////Af///wFEOSUDVEk3LWJZSdF1bl/9hX5x/62q
        pP/Avrr/xMO//726tv+xrqf/f3dp/3NrWv1xaVjHa2NRMZyXjCu6tq+N2NbT5evr6f3x8fD/9PTz/9vZ
        1f+moJb/n5mN/6Cajv2YkoW7g35sI////wH///8B////Af///wH///8B////Af///wFORDELUkk2UVdO
        O7VwaFjvpqKb/8PCvv/IxsP/ysjF/8K/uv+1sKn/mZSI/5WPg/GinpPBxcO9zd7d2vXr6+n98fDv//Tz
        8v/z8/L/x8S+/6Odk/+ln5T/oZuP6ZONf3GBfmoD////Af///wH///8B////Af///wH///8B////Af//
        /wFQRzUFVEs4H29oWX2hnZXrxMO//8rJxv/Pzsv/0tHO/9LQzf/V09D/19bT/97d2v3n5uX/7Ovq/+/v
        7f/y8vH/9vb1//f39//n5eL/trKq/6qkmv+emIzVkIl7P////wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8BcWlaN5qVjMG+vLj/zczJ/9LRzv/W1dP/3NvY/+Df3f/j4+H/5+fl/+vq
        6P/u7u3/8fDv//Ly8P/29vX/+fn5//j49//PzMb/tK+m/66qoPWgm4+blpF/E////wH///8B////Af//
        /wH///8B////Af///wH///8B////AWZfTQ1/eWtbpJ+W1cTCvv/Qz8z/1dTR/9nY1v/e3dv/4uHf/+bm
        5P/p6ef/7Ozr/+7t7P/l5OL/2NbR/+nn5f/29vX/5+Xj/8C8tf+6tq7/urau/66pnsWWkYIx////Af//
        /wH///8B////Af///wH///8B////Af///wFlXksHenRlQ5yXjb+/vLf7zcvI/8rIxP/Qz8v/2djV/+Df
        3f/k5OL/6Ojm/+np5//l5OH/2NbS/8K/t/+1sKf/yMW+/9jX0vvFwrz/vbmx/8C8tP+7tq7tq6aakZiW
        hhH///8B////Af///wH///8B////Af///wH///8B////AWdfThGLhXl1sq6n7cvJxf/DwLv/rKee/7Ku
        pf/Dwbv/0c/L/+Pi4P/q6uj/5OPg/8jEvv+zrqX/r6qg/66pn/esp5zXqqaatbGto8+6t67zvLiw7bOv
        pKGmoZQt////Af///wH///8B////Af///wH///8B////Af///wH///8BamNQCYqFd0uno5rHuLWu+6mk
        mv+WkIT/mZKG/6Cajv2uqp/z393a/+zs6v/h4N3/vLev/7KtpP+vq6H9p6KXt56ZjF2YkoMxpKCTS6+r
        oIWxraKBp6OXM5+bjQX///8B////Af///wH///8B////Af///wH///8B////Af///wH///8BfHVkE4yH
        eWGTjoG/kot+7ZWPgv2Ykob9kIp81aejmMHi4t//7e3r/+Df3P/BvbX/ubWs/7Gto/uloZV3lpKDD///
        /wGbloYFo5+QEaWikxGgm44D////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8Bd3BfEX12Zj+HgHF5kIl8rZKMf6+LhnZhrKiepdjW0v/Z19L/y8nD/8C8tP+/vLT/t7Op+6um
        m22bl4gJ////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8BfHZjBYJ7bBGLhHYnjIV4KYmEdA+jn5NFr6ugs7Svpum7t675vrqy/766
        svuzrqTlqKSXW56bjwf///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wGFfnAD////AZiThQeclYghopyPV6mk
        mYuuqZ6draidjaikl1uloZQZ////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wGblYcHo52RC6ijlw2moZQLo56RB6SfkwP///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>